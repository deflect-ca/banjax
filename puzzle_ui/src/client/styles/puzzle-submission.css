
/*HELPER BUTTONS ON THE LEFT SIDE OF THE SUBMISSION CONTAINER*/
.helper-button-group {
    display: flex;
    align-items: center;
    gap: 20px;
    font-size:1.6rem;
    color:rgb(148, 148, 148);
    flex-wrap: wrap; /* allow wrapping on smaller screens so that as it gets smaller the icons stack up on one another*/
}


#detailed-instructions-info-icon:hover {
    color:black;
}

/*
when we add the .enabled class we get the pointer and darker color on hover, 
but when we remove the .enabled class, we fallback to the default (unless not-currently-clickable)
*/
.request-different-puzzle-icon.enabled:hover:not(.not-currently-clickable) {
    color: black;
    cursor: pointer;
}

/*cursor is default UNLESS .enabled class is added (see above)*/
.request-different-puzzle-icon:not(.not-currently-clickable) {
    cursor: not-allowed;
    opacity: 0.3;
}

.not-currently-clickable {
    /* cursor:not-allowed; */
    pointer-events: none !important; 
    opacity: 0.3;
}

/* .not-currently-clickable::after {
    content: "Please wait before requesting a new puzzle.";
    position: absolute;
    top: -25px;
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 5px 10px;
    border-radius: 4px;
    font-size: 0.8rem;
    white-space: nowrap;
} */


/*
since the audio functionality is not implemented yet, we keep it opaque
and when user hovers on it we show not allowed
*/
#request-audio-puzzle-icon {
    opacity: 0.3;
}
#request-audio-puzzle-icon:hover {
    /* color:black; */
    cursor: not-allowed;
}


/*rotate the fontawesome icon when refreshing the puzzle*/
@keyframes rotateIcon {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

/* we apply this class while waiting on the response to the request for refreshing the puzzle */
.rotating-while-waiting-on-new-puzzle-request-response {
    animation: rotateIcon 1s linear infinite;
    pointer-events: none; /*to inform user its not clickable while spinning*/
    opacity: 0.7;
}












/*SUBMIT BUTTON AND LOGO ON THE RIGHT SIDE OF THE SUBMISSION CONTAINER*/

.right-button-logo-group {
    display: flex;
    align-items: center;
    gap: 10px;
    /*flex-wrap: wrap;  allow wrapping on smaller screens so that as it gets smaller the logo and submit button stack up on one another*/
}



#deflect-logo {
    width: auto;
    height: auto;
}




.submit-deflect-captcha-solution {
    padding: 10px 40px;
    border-radius: 50px;
    border: 2px solid #5dd39e;
    background-color: #2c2f33;
    color: #ffffff;
    font-size: 18px;
    /* font-family: 'Arial', sans-serif; */
    cursor: pointer;
    outline: none;
    transition: all 0.4s ease;
    display: inline-block;
    text-align: center;

    transition: all 0.4s ease, color 0.4s ease, background-color 0.4s ease;
    width: 140px;
}


.submit-deflect-captcha-solution:hover:not(.disabled):not(.success) {
    background-color: #3498db; 
    color: #ffffff;
    border-color: #3498db;
    box-shadow: 0 0 15px rgba(52, 152, 219, 0.5); 
    transition: all 0.4s ease;
}


.submit-deflect-captcha-solution.success {
    background-color: #5dd39e; 
    border-color: #5dd39e;
    color: #2c2f33;
    /* box-shadow: 0 0 15px rgba(93, 211, 158, 0.5);  */ /*no green glow around it*/ 
    box-shadow: 0 0 20px rgba(46, 204, 113, 0.7); /*green glow around it */
    transition: all 0.4s ease; 
    pointer-events: none;

    transition: all 0.4s ease, color 0.4s ease, background-color 0.4s ease;
}


/* .submit-deflect-captcha-solution.disabled {
    cursor: not-allowed;
    opacity: 0.6;
    background-color: #444;
    border-color: #888;
} */
.submit-deflect-captcha-solution.disabled {
    opacity: 0.6 !important;
    background-color: #444 !important;
    border-color: #888 !important;
    pointer-events: none !important;
}


.submit-deflect-captcha-solution.loading {
    position: relative;
    cursor: not-allowed !important;
    /* pointer-events: none; */
}

.submit-deflect-captcha-solution.loading::after {
    content: "";
    border: 3px solid #f3f3f3;
    border-top: 3px solid #3498db;
    border-radius: 50%;
    width: 24px;
    height: 24px;
    animation: spin 1s linear infinite;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    transition: opacity 0.3s ease;
}

@keyframes spin {
    0% { transform: translate(-50%, -50%) rotate(0deg); }
    100% { transform: translate(-50%, -50%) rotate(360deg); }
}
